generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  member
}

enum TaskStatus {
  pending
  in_progress
  completed
}

enum TaskPriority {
  high
  medium
  low
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  role       Role      @default(member)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  memberships TeamMember[]
  assignedTasks Task[] @relation("AssignedTasks")
  changes    TaskHistory[] @relation("ChangedBy")
}

model Team {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  members     TeamMember[]
  tasks       Task[]
}

model TeamMember {
  id        Int      @id @default(autoincrement())
  userId    Int
  teamId    Int
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  team Team @relation(fields: [teamId], references: [id], onDelete: Cascade)

  @@unique([userId, teamId])
}

model Task {
  id          Int           @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus    @default(pending)
  priority    TaskPriority  @default(medium)
  assignedTo  Int?
  teamId      Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  assignee User? @relation("AssignedTasks", fields: [assignedTo], references: [id], onDelete: SetNull)
  team     Team  @relation(fields: [teamId], references: [id], onDelete: Cascade)
  history  TaskHistory[]
}

model TaskHistory {
  id         Int        @id @default(autoincrement())
  taskId     Int
  changedBy  Int
  oldStatus  TaskStatus?
  newStatus  TaskStatus
  changedAt  DateTime   @default(now())

  task   Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  user   User @relation("ChangedBy", fields: [changedBy], references: [id], onDelete: SetNull)
}
